/* Bet in each round from the amount of money left. On the first roll in a round, the player may win or lose based on the sum of the dice. Otherwise, on subsequent rolls, the player wins if they get their goal or they lose if the sum is 6. They may earn or lose money in each round until the game is over. */

#include <iostream>
#include <cstdlib>

using namespace std;
int main() {
  srand(time(0));
  cout << "\n ------------------------------------------------------------------------";
  cout << "\n    CCCCC      AA       SSSSSSSSS   IIIIIIIII  NN     NN    OOOOOOOO     ";
  cout << "\n  CC          A  A      SS             III     NN N   NN   OO      OO    ";
  cout << "\n CC          A    A     SSSSSSSSS      III     NN  N  NN   OO      OO    ";
  cout << "\n  CC        AAAAAAAA           SS      III     NN   N NN   OO      OO    ";
  cout << "\n    CCCCC  A        A   SSSSSSSSS   IIIIIIIII  NN     NN    OOOOOOOO     ";
  cout << "\n ------------------------------------------------------------------------";

  // start off with $100
  int amtLeft = 100;
  // reset value of bet to 0
  int bet = 0;

  // keep playing until no money left
  while (amtLeft != 0) {
    cout << "\nEnter a bet that is less than or equal to $" << amtLeft << " : ";
    cin >> bet;

    if (bet > amtLeft) {
      cout << "\nNot a valid choice.";
    }
    else {
      // roll two dice
      int dice1 = rand() % 6 + 1;
      int dice2 = rand() % 6 + 1;
      cout << "\n" << dice1 << ", " << dice2;
      int sum_dice = dice1 + dice2;

      // lose round if sum of dice is 2, 3 or 12
      if (sum_dice == 2 or sum_dice == 3 or sum_dice == 12) {
        cout << "\nYou lose.";
        amtLeft = amtLeft - bet;
        cout << " You have $" << amtLeft << " remaining.\n";
      }

      // win round if sum of dice is 7 or 11
      else if (sum_dice == 7 or sum_dice == 11) {
        cout << "\nYou win!";
        amtLeft = amtLeft + bet;
        cout << " You have $" << amtLeft << " remaining.\n";
      }

      // otherwise save the sum as the goal
      else {
        int goal = sum_dice;
        // reset sum to 0 for rolling again
        sum_dice = 0;

        // keep rolling until sum equals the goal or 6
        while (sum_dice != goal and sum_dice != 6) {
          int dice1 = rand() % 6 + 1;
          int dice2 = rand() % 6 + 1;
          cout << "\n" << dice1 << ", " << dice2;
          sum_dice = dice1 + dice2;
        }
        
        if (sum_dice == goal) {
          cout << "\nYou win!";
          amtLeft = amtLeft + bet;
          cout << " You have $" << amtLeft << " remaining.\n";
        }
        else if (sum_dice == 6) {
          cout << "\nYou lose.";
          amtLeft = amtLeft - bet;
          cout << " You have $" << amtLeft << " remaining.\n";
        }
      }
    }
  }
  cout << "\nGame over.";
}
